* DevOps Project Overview: It is an end-to-end software lifecycle implementation that combines development (coding, building, testing) and operations (deployment, monitoring, scaling) using automation and 
                           collaboration. The goal is to deliver software faster, more reliably, and with higher quality.
* Key Phases in a DevOps Project
1. Plan
->Collect requirements (features, bug fixes, improvements).
->Use tools like Jira, Confluence, and Trello.

2. Code
->Developers write application code.
->Tools: Git, GitHub/GitLab/Bitbucket.

3. Build
->Convert code into an executable artifact (JAR, WAR, Docker Image, etc.).
->Tools: Maven, Gradle, npm, Docker.

5. Test
->Automated testing (Unit, Integration, Security, Performance).
->Tools: JUnit, Selenium, SonarQube, JMeter.

6. Release
->Package and store artifacts in repositories.
->Tools: Nexus, Artifactory, GitHub Packages.

7. Deploy
->Deploy applications to servers/containers/cloud.
->Tools: Jenkins, Ansible, Kubernetes, AWS/GCP/Azure.

8. Monitor
->Track application performance, logs, and user experience.

* Flow
      Code pushed to GitHub → Jenkins triggers build → SonarQube scans code quality → Docker builds image → push to DockerHub → Kubernetes deploys → Prometheus monitors.

*Key Features of a DevOps Project
->Automation of build, test, and deploy.
->Continuous Integration & Continuous Deployment (CI/CD).
->Scalability with containers and orchestration.
->Monitoring & Feedback loops for improvement.
->Collaboration between Dev & Ops.
->Tools: Prometheus, Grafana, ELK Stack, Datadog.
